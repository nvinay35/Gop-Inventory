# Unique name for this workflow
name: Validate PR on develop branch

# Definition when the workflow should run
on:
    # The workflow will run whenever an event happens on a pull request
    pull_request:
      # The events are that a PR is opened, or when a commit is pushed
      # to a branch that has an existing pull request
      types: [closed]
      # The branches filter allows to specify that this workflow should only
      # run if the branch name is "develop". This way we prevent this workflow
      # from running when PRs are opened on other branches
      branches: [ develop ]
      # We only care about changes to the force-app directory, which is the
      # root directory of the sfdx project. This prevents the job from running
      # when changing non-salesforce files (like this yml file).
            

# Jobs to be executed when the above conditions are met
jobs:
    # This is the name of the job. You can give it whatever name you want
    validate-deployment-on-develop-org:
        # As mentioned in the blog post, this job runs inside a VM. Here we
        # can specify which OS this VM should run on. 
        # In this case, we are going to run our commands on the latest version
        # of ubuntu
        runs-on: ubuntu-latest

        steps:
          - uses: actions/checkout@v2
          - uses: sfdx-actions/setup-sfdx@v1
            with:
              sfdx-auth-url: ${{ secrets.SFDX_INTEGRATION_URL }}
          # Now Install Salesforce CLI
          - name: 'Install Salesforce CLI'
            run: |
                wget https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
                mkdir ~/sfdx
                tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1
                echo "$HOME/sfdx/bin" >> $GITHUB_PATH
                ~/sfdx/bin/sfdx version

          - name: "Install App and Create Delta"   
            run: |
              sudo npm install sfdx-git-delta@latest -g
              git config remote.origin.fetch '+refs/heads/*:refs/remotes/origin/*'
              git fetch --all
              git checkout -b pr
              git --no-pager diff --name-status pr origin/develop
              sfdx sgd:source:delta --to pr --from origin/develop --repo . --output .
              cat package/package.xml         
          - name: 'Convert Metadata'
            run: sfdx force:source:convert --manifest=package/package.xml  --outputdir=convert
          - name: 'Run Test on Metadata'
            run: sfdx force:source:deploy -x package/package.xml --checkonly --testlevel RunLocalTests  --json
            #run: sfdx force:mdapi:deploy --deploydir=convert --testlevel=RunLocalTests --checkonly -w30